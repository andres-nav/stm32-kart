#ifndef __ROBOT_H
#define __ROBOT_H

#include "stm32l1xx_hal.h"

typedef enum { MOTOR_PIN_UP, MOTOR_PIN_DOWN } StatusMotorPin;
typedef enum { MOTOR_STOPPED, MOTOR_FORWARD, MOTOR_BACKWARD } StatusMotor;
typedef enum { ROBOT_STOPPED, ROBOT_FORWARD, ROBOT_BACKWARD, ROBOT_RIGHT, ROBOT_LEFT} StatusRobot;

typedef struct {
  StatusMotorPin status;
  GPIO_TypeDef* gpio;
  char pin;
} MotorPin;


typedef struct {
  StatusMotor status;
  MotorPin pin_1;
  MotorPin pin_2;
} Motor;


typedef struct {
  StatusRobot status;
  Motor motor_right;
  Motor motor_left;
} Robot;

void initMotorPin(MotorPin *motor_pin, GPIO_TypeDef *gpio, char pin);
void initMotor(Motor *motor, MotorPin *pin_1, MotorPin *pin_2);
void initRobot(Robot *robot, Motor *motor_right, Motor *motor_left);

void updateStatusMotorPin(MotorPin *motor_pin, StatusMotorPin status);
void updateStatusMotor(Motor *motor, StatusMotor status);
void updateStatusRobot(Robot *robot, StatusRobot status);

void updateMotorPin(MotorPin *motor_pin);
void updateMotor(Motor *motor);
void updateRobot(Robot *robot);

#endif /* __ROBOT_H */
