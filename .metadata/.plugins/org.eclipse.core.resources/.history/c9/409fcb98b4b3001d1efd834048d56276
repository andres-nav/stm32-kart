#ifndef __ROBOT_H
#define __ROBOT_H

#include "stm32l1xx_hal.h"

extern struct Robot g_robot;

enum StatusGPIOPin { MOTOR_PIN_UP, MOTOR_PIN_DOWN };
enum StatusMotor { MOTOR_STOPPED, MOTOR_FORWARD, MOTOR_BACKWARD };
enum StatusRobot { ROBOT_STOPPED, ROBOT_FORWARD, ROBOT_BACKWARD, ROBOT_RIGHT, ROBOT_LEFT };

struct GPIOPin {
  enum StatusGPIOPin status;
  GPIO_TypeDef* gpio;
  char pin;
};

struct Motor {
  enum StatusMotor status;
  struct GPIOPin pin_1;
  struct GPIOPin pin_2;
};

struct Robot {
  enum StatusRobot status;
  struct Motor motor_right;
  struct Motor motor_left;
};

void createRobot();

void initGPIOPin(struct GPIOPin *gpio_pin, GPIO_TypeDef *gpio, char pin);
void initMotor(struct Motor *motor, struct MotorPin *pin_1, struct MotorPin *pin_2);
void initRobot(struct Motor *motor_right, struct Motor *motor_left);

void updateStatusRobot(enum StatusRobot status);
void updateRobot();

void updateStatusMotor(struct Motor *motor, enum StatusMotor status);
void updateMotor(struct Motor *motor);

void updateStatusGPIOPin(struct GPIOPin *gpio_pin, enum StatusGPIOPin status);
void updateGPIOPin(struct GPIOPin *gpio_pin);

#endif /* __ROBOT_H */
